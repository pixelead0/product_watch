[tool.poetry]
name = "product_watch"
version = "0.1.0"
description = "Product tracing system with Django Ninja"
authors = ["pixelead0 <me@pixelead0.com>"]

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0"
django-ninja = "^1.0"
psycopg2-binary = "^2.9.9"
redis = "^5.0.1"
celery = "^5.3.6"
pydantic = "^2.5"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
sendgrid = "^6.10.0"
uvicorn = {extras = ["standard"], version = "^0.25.0"}
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"
pytest-django = "^4.7"
pytest-asyncio = "^0.23.3"
black = "^23.12"
isort = "^5.13"
mypy = "^1.8"
flake8 = "^7.1.2"
pre-commit = "^4.1.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
httpx = "^0.28.1"
faker = "^36.1.1"
coverage = "^7.6.12"
types-passlib = "^1.7.7.20241221"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=html --cov-report=term-missing --cov-fail-under=50"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["src"]
fail_under = 50
omit = [
    "tests/*",
    "**/__init__.py",
    "src/main.py",
    "src/config.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]


[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = false
explicit_package_bases = true
